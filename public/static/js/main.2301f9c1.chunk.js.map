{"version":3,"sources":["Header.js","Map.js","index.js"],"names":["headerData","name","getData","result","value","timeSeries","values","toFixed","toString","replace","Header","props","state","isLoaded","data","error","fetch","then","res","json","setState","headerInfos","i","length","push","className","title","this","React","Component","HeaderInfo","paramCodes","reservoirData","sitenumber","location","getSE","getRC","riverData","getGH","getFR","Map","MapContainer","MapInfo","cleanedData","codes","split","siteNum","paramCode","Object","keys","includes","sourceInfo","siteName","cleanData","reservoirBody","scope","riverBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2301f9c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Header.css\";\r\n// import BigInfo from './BigInfo.js';\r\n\r\nconst headerData = [\r\n    {   name: 'Spillway Elevation',\r\n        getData(result) { return \"1,064.20 ft\" }\r\n    },\r\n    {   name: 'Current Surface Elevation',\r\n        getData(result) { return result.value.timeSeries[10].values[0].value[0].value + \" ft\"; }\r\n    },\r\n    {   name: 'Feet Low',\r\n        getData(result) { return (1064.20 - result.value.timeSeries[6].values[0].value[0].value).toFixed(2) + \" ft\"; }\r\n    },\r\n    {   name: 'Max Capacity',\r\n    getData(result) { return \"254,823 acre-ft\" }\r\n    },\r\n    {   name: 'Current Capacity',\r\n    getData(result) { return (result.value.timeSeries[5].values[0].value[0].value).toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\") + \" acre-ft\"; }\r\n    },\r\n    {   name: 'Percent Full',\r\n        getData(result) { return ((result.value.timeSeries[5].values[0].value[0].value / 254823)*100).toFixed(2) + '%'; }\r\n    },\r\n];\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isLoaded: false,\r\n            data: 0,\r\n            error: false,\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://waterservices.usgs.gov/nwis/dv/?format=json&sites=08179500&siteStatus=all\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                this.setState({\r\n                isLoaded: true,\r\n                data: result,\r\n                error: false\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                isLoaded: true,\r\n                error: true,\r\n                data: null\r\n                });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        var headerInfos = [];\r\n        for(var i = 0; i < headerData.length; i++){\r\n            headerInfos.push(\r\n                <div className='col-md'>\r\n                    <HeaderInfo \r\n                        title={headerData[i].name} \r\n                        data={(this.state.isLoaded && !this.state.error)? headerData[i].getData(this.state.data) : \"---\"} \r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div className='header'>\r\n                <div className='row justify-content-evenly'>\r\n                    {headerInfos}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass HeaderInfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='header-info row'>\r\n                <div className='col justify-content-center'>\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"w-100 d-none d-md-block\"></div>\r\n                <div className='col justify-content-center'>\r\n                    {this.props.data}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./Map.css\";\r\n\r\nconst paramCodes = {\r\n    totalprecip: '00045',\r\n    flowrate: '00060',\r\n    gaugeheight: '00065',\r\n    surfacearea: '00053',\r\n    reservoirstorage: '00054',\r\n    surfaceelevation: '62614',\r\n};\r\n\r\nconst reservoirData = [\r\n    {\r\n        sitenumber: '08179500',\r\n        location: 'Medina Lake Dam',\r\n        getSE(result) {return result[this.sitenumber][paramCodes.surfaceelevation] + \" ft\"},\r\n        getRC(result) {return result[this.sitenumber][paramCodes.reservoirstorage]},\r\n    },\r\n    {\r\n        sitenumber: '08180010',\r\n        location: 'Diversion Lake',\r\n        getSE(result) {return result[this.sitenumber][paramCodes.surfaceelevation]},\r\n        getRC(result) {return result[this.sitenumber][paramCodes.reservoirstorage]},\r\n    },\r\n];\r\n\r\nconst riverData = [\r\n    {\r\n        sitenumber: '08178861',\r\n        location: 'North Prong',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n    {\r\n        sitenumber: '08178871',\r\n        location: 'West Prong',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n    {\r\n        sitenumber: '0817887350',\r\n        location: 'Medina',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n    {\r\n        sitenumber: '08178880',\r\n        location: 'Bandera',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n    {\r\n        sitenumber: '08178980',\r\n        location: 'English Crossing',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n    {\r\n        sitenumber: '08179110',\r\n        location: 'Red Bluff Creek',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n    {\r\n        sitenumber: '08180500',\r\n        location: 'South of Diversion Lake',\r\n        getGH(result) {return result[this.sitenumber][paramCodes.gaugeheight]},\r\n        getFR(result) {return result[this.sitenumber][paramCodes.flowrate]},\r\n    },\r\n];\r\n\r\nclass Map extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='map-row row'>\r\n                <div className='col-md-7'><MapContainer /></div>\r\n                <div className='col-md-5'><MapInfo /></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MapContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='map-container'>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MapInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            isLoaded: false,\r\n            data: 0,\r\n            error: false,\r\n            });\r\n    }\r\n\r\n    cleanData(result){\r\n        result = result.value.timeSeries\r\n        // console.log(result);\r\n\r\n        var cleanedData = {};\r\n\r\n        for(var i = 0; i < result.length; i++){\r\n            var codes = result[i].name.split(':');\r\n            var siteNum = codes[1];\r\n            var paramCode = codes[2];\r\n            if (Object.keys(cleanedData).includes(siteNum)){\r\n                cleanedData[siteNum][paramCode] = result[i].values[0].value[0].value;\r\n                cleanedData[siteNum][\"name\"] = result[i].sourceInfo.siteName;\r\n            } else {\r\n                cleanedData[siteNum] = {};\r\n                cleanedData[siteNum][paramCode] = result[i].values[0].value[0].value;\r\n                cleanedData[siteNum][\"name\"] = result[i].sourceInfo.siteName;\r\n            }\r\n        }\r\n\r\n        // console.log(cleanedData);\r\n\r\n        return cleanedData;\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://waterservices.usgs.gov/nwis/iv/?format=json&sites=08179500,08180010,08178861,08178871,0817887350,08178880,08178980,08179110,08180500&siteStatus=all\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                this.setState({\r\n                isLoaded: true,\r\n                data: this.cleanData(result),\r\n                error: false\r\n                });\r\n                // console.log(this.state.data);\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                isLoaded: true,\r\n                error: true,\r\n                data: null\r\n                });\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        var reservoirBody = [];\r\n        for(var i = 0; i < reservoirData.length; i++){\r\n            reservoirBody.push(\r\n                <tr>\r\n                <th scope=\"row\">{reservoirData[i].sitenumber}</th>\r\n                <td>{reservoirData[i].location}</td>\r\n                <td>{(this.state.isLoaded && !this.state.error)? reservoirData[i].getSE(this.state.data) : \"---\"}</td>\r\n                <td>{(this.state.isLoaded && !this.state.error)? reservoirData[i].getRC(this.state.data) : \"---\"}</td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        var riverBody = [];\r\n        for(i = 0; i < riverData.length; i++){\r\n            riverBody.push(\r\n                <tr>\r\n                <th scope=\"row\">{riverData[i].sitenumber}</th>\r\n                <td>{riverData[i].location}</td>\r\n                <td>{(this.state.isLoaded && !this.state.error)? riverData[i].getGH(this.state.data) : \"---\"}</td>\r\n                <td>{(this.state.isLoaded && !this.state.error)? riverData[i].getFR(this.state.data) : \"---\"}</td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='map-info'>\r\n                <h3>Reservoir Data</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Site #</th>\r\n                        <th scope=\"col\">Location</th>\r\n                        <th scope=\"col\">Surface Elevation</th>\r\n                        <th scope=\"col\">Reservoir Storage</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {reservoirBody}\r\n                    </tbody>\r\n                </table>\r\n                <h3>River Data</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">Site #</th>\r\n                        <th scope=\"col\">Location</th>\r\n                        <th scope=\"col\">Gauge Height</th>\r\n                        <th scope=\"col\">Flow Rate</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {riverBody}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport Header from './Header.js';\nimport Map from './Map.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className='main-container container h-100 d-flex flex-column justify-content-evenly'>\n      <div className='row'>\n        <Header />\n      </div>\n      <div className='row flex-grow-1'>\n        <Map/>\n      </div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}