{"version":3,"sources":["BigInfo.js","reportWebVitals.js","index.js"],"names":["BigInfo","props","state","error","isLoaded","data","fetch","this","dataSource","then","res","json","result","setState","value","timeSeries","values","classname","title","class-name","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA6CeA,E,kDAzCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVC,KAAM,GALK,E,qDASnB,WAAqB,IAAD,OAChBC,MAAMC,KAAKN,MAAMO,YACdC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GAGG,EAAKC,SAAS,CACdT,UAAU,EACVC,KAAMO,EAAOE,MAAMC,WAAW,GAAGC,OAAO,GAAGF,MAAM,GAAGA,WAMxD,SAACX,GACG,EAAKU,SAAS,CACdT,UAAU,EACVD,e,oBAOZ,WACI,OACI,qBAAIc,UAAU,aAAd,UAA4BV,KAAKN,MAAMiB,MAAM,sBAAMC,aAAW,eAAjB,SAAiCZ,KAAKL,MAAMG,c,GArC/Ee,IAAMC,WCSbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAASd,MAAM,4BAA4BV,WAAW,wFAExDyB,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ee42b02.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./BigInfo.css\";\r\n\r\nclass BigInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            data: 0\r\n          };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(this.props.dataSource)\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                // console.log(\"test\");\r\n                // console.log(result);\r\n                this.setState({\r\n                isLoaded: true,\r\n                data: result.value.timeSeries[6].values[0].value[0].value\r\n                });\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n                this.setState({\r\n                isLoaded: true,\r\n                error\r\n                });\r\n                // console.log(\"ERROR!!!\");\r\n            }\r\n          )\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <h1 classname='BigInfo-h1'>{this.props.title}<span class-name='BigInfo-data'>{this.state.data}</span></h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BigInfo;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BigInfo from './BigInfo.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BigInfo title=\"Medina Lake water level: \" dataSource=\"https://waterservices.usgs.gov/nwis/dv/?format=json&sites=08179500&siteStatus=all\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}